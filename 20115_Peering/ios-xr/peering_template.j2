{% set node = nodes[inventory_hostname] %}

{% if node.lag_id_2 is defined %}
This Peering config is for {{ node.jira }} in {{ inventory_hostname }} for {{ node.name|upper }} with capacity BE{{node.lag_id_1}}-{{ node.lag_bw_1 }}G and BE{{node.lag_id_2}}-{{ node.lag_bw_2 }}G
{% elif node.lag_id_1 is defined %}
This Peering config is for {{ node.jira }} in {{ inventory_hostname }} for {{ node.name|upper }} with capacity BE{{node.lag_id_1}}-{{ node.lag_bw_1 }}G
{% else %}
This Public Peering config is for {{ node.jira }} in {{ inventory_hostname }} for {{ node.name|upper }}
{% endif %}


!CHANGE SPECIFIC PRE-CHECKS BELOW!

Router Name: {{ inventory_hostname }}

{% if node.lag_id_1 is defined %}
show int be{{ node.lag_id_1 }}
{% else %}
ping {{node.bgp.peer_ipv4_1}} source {{node.lag_local_ipv4_1.split("/")[0]}} count 1000
ping {{node.bgp.peer_ipv6_1}} source {{node.lag_local_ipv6_1.split("/")[0]}} count 1000
sh route {{ node.bgp.peer_ipv4_1 }}
sh route {{node.lag_local_ipv4_1.split("/")[0]}}
{% endif %}

{% if node.lag_id_2 is defined %}
show int be{{ node.lag_id_2 }}
{% else %}
{% endif %}

{% if node.lag_id_1 is defined %}
{% for intf,intf_attr in node.lag_id_1_links.items()|sort %}
show interface {{ intf }}
show controllers {{ intf }} phy | i dB
{% endfor %}
{% else %}
{% endif %}

{% if node.lag_id_2 is defined %}   
{% for intf,intf_attr in node.lag_id_2_links.items()|sort %}
show interface {{ intf }}
show controllers {{ intf }} phy | i dB
{% endfor %}
{% else %}
{% endif %}

{% if node.lag_id_1 is defined %}
show route {{ node.lag_local_ipv4_1 }}
{% else %}
{% endif %}

{% if node.lag_id_2 is defined %}   
show route {{ node.lag_local_ipv4_2 }}
{% else %}
{% endif %}

{% if node.lag_id_1 is defined %}
show route ipv6 unicast {{ node.lag_local_ipv6_1 }}
{% else %}
{% endif %}

{% if node.lag_id_2 is defined %}   
show route ipv6 unicast {{ node.lag_local_ipv6_2 }}
{% else %}
{% endif %}

{% if node.bgp.peer_ipv4_1 is defined %}
sh run formal | i {{ node.bgp.remote_as }}
!WARNING: If BGP group already existed, chances of overwrite possible!! USE CAUTION!!
{% else %}
{% endif %}

{% if node.bgp.remote_as is defined %}
show bgp all all sum | i {{ node.bgp.remote_as }}
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_1 is defined %}  
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_1 }} advertised-routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_2 is defined %}
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_2}} advertised-routes
{% else %}
{% endif %}

{% if node.bgp.peer_ipv4_1 is defined %}
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_1 }} routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_2 is defined %}   
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_2 }} routes
{% else %}
{% endif %}

{% if node.bgp.peer_ipv6_1 is defined %}
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_1 }} advertised-routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv6_2 is defined %}   
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_2 }} advertised-routes
{% else %}
{% endif %}

{% if node.bgp.peer_ipv6_1 is defined %}
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_1 }} routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv6_2 is defined %}
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_2 }} routes
{% else %}
{% endif %}
!


!CHANGE SPECIFIC CONFIGURATIONS BELOW!

START

Router Name: {{ inventory_hostname }}

{% if node.lag_id_1 is defined %}
!LAG 1 Interface Configs!
interface be{{ node.lag_id_1 }}
interface be{{ node.lag_id_1 }} description [TYPE={{ node.type|upper }}][BW={{ node.lag_bw_1 }}G][NAME={{ node.name|upper }}][AS={{ node.bgp.remote_as }}][GRNT={{ node.lag_grnt_1|upper }}][IP={{ node.bgp.peer_ipv4_1 }}]
interface be{{ node.lag_id_1 }} service-policy input DDOS_POLICER_POLICY
interface be{{ node.lag_id_1 }} ipv4 address {{ node.lag_local_ipv4_1 }}
interface be{{ node.lag_id_1 }} ipv6 address {{ node.lag_local_ipv6_1 }}
interface be{{ node.lag_id_1 }} load-interval 30
interface be{{ node.lag_id_1 }} flow ipv4 monitor NETFLOW_IPV4 sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_1 }} flow ipv6 monitor NETFLOW_IPV6 sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_1 }} flow mpls monitor NETFLOW_MPLS sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_1 }} dampening 1 750 2000 4
interface be{{ node.lag_id_1 }} ipv4 access-group EDGE_IN_IPV4_FILTER ingress
interface be{{ node.lag_id_1 }} ipv6 access-group EDGE_IN_IPV6_FILTER ingress

!Interface Config LAG 1!
{% for intf,intf_attr in node.lag_id_1_links.items()|sort %}
interface {{ intf }}
interface {{ intf }} description [TYPE={{ node.type|upper }}][BW={{ node.lag_id_1_link_bw }}G][NAME={{ node.name|upper }}][AS={{ node.bgp.remote_as }}][LAG={{ node.lag_id_1 }}][GRNT={{ intf_attr.int_grnt|upper }}][JIRA={{ node.jira|upper }}][CCID={{ intf_attr.ccid|upper }}][PCID={{ intf_attr.pcid|upper }}]
interface {{ intf }} bundle id {{ node.lag_id_1 }} mode active
interface {{ intf }} lldp
interface {{ intf }} lldp receive disable
interface {{ intf }} lldp transmit disable
interface {{ intf }} lacp period short
interface {{ intf }} carrier-delay up 2000 down 0
interface {{ intf }} dampening 1 750 2000 4
{% endfor %}
{% else %}
{% endif %}


{% if node.lag_id_2 is defined %}         
!LAG 2 Interface Configs!
interface be{{ node.lag_id_2 }}
interface be{{ node.lag_id_2 }} description [TYPE={{ node.type|upper }}][BW={{ node.lag_bw_2 }}G][NAME={{ node.name|upper }}][AS={{ node.bgp.remote_as }}][GRNT={{ node.lag_grnt_2|upper }}][IP={{ node.bgp.peer_ipv4_2 }}]
interface be{{ node.lag_id_2 }} service-policy input DDOS_POLICER_POLICY
interface be{{ node.lag_id_2 }} ipv4 address {{ node.lag_local_ipv4_2 }}
interface be{{ node.lag_id_2 }} ipv6 address {{ node.lag_local_ipv6_2 }}    
interface be{{ node.lag_id_2 }} load-interval 30
interface be{{ node.lag_id_2 }} flow ipv4 monitor NETFLOW_IPV4 sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_2 }} flow ipv6 monitor NETFLOW_IPV6 sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_2 }} flow mpls monitor NETFLOW_MPLS sampler FNF_SAMPLER_MAP ingress
interface be{{ node.lag_id_2 }} dampening 1 750 2000 4
interface be{{ node.lag_id_2 }} ipv4 access-group EDGE_IN_IPV4_FILTER ingress
interface be{{ node.lag_id_2 }} ipv6 access-group EDGE_IN_IPV6_FILTER ingress

!Interface Config LAG 2!
{% for intf,intf_attr in node.lag_id_2_links.items()|sort %}
interface {{ intf }}
interface {{ intf }} description [TYPE={{ node.type|upper }}][BW={{ node.lag_id_2_link_bw }}G][NAME={{ node.name|upper }}][AS={{ node.bgp.remote_as }}][LAG={{ node.lag_id_2 }}][GRNT={{ intf_attr.int_grnt|upper }}][JIRA={{ node.jira|upper }}][CCID={{ intf_attr.ccid|upper }}][PCID={{ intf_attr.pcid|upper }}] 
interface {{ intf }} bundle id {{ node.lag_id_2 }} mode active
interface {{ intf }} lldp
interface {{ intf }} lldp receive disable
interface {{ intf }} lldp transmit disable
interface {{ intf }} lacp period short
interface {{ intf }} carrier-delay up 2000 down 0
interface {{ intf }} dampening 1 750 2000 4
{% endfor %}
{% else %}
{% endif %}



!BGP Configs!

router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP remote-as {{ node.bgp.remote_as }}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP description "https://www.peeringdb.com/asn/{{ node.bgp.remote_as }}"
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast
{% if node.bgp.ipv4_md5 is defined %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP password clear {{ node.bgp.ipv4_md5 }}
{% else %}
{% endif %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast send-community-ebgp
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast route-policy INBOUND-PEERS in
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast maximum-prefix {{ node.bgp.ipv4_prefix_limit }} 90
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast route-policy OUTBOUND-PEERS out
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast remove-private-AS
{% if node.bgp.peer_ipv4_2 is defined %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast multipath
{% else %}
{% endif %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP address-family ipv4 unicast soft-reconfiguration inbound


router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP remote-as {{ node.bgp.remote_as }}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP description "https://www.peeringdb.com/asn/{{ node.bgp.remote_as }}"
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast
{% if node.bgp.ipv6_md5 is defined %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP password clear {{ node.bgp.ipv6_md5 }}
{% else %}
{% endif %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast send-community-ebgp
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast route-policy IPV6-INBOUND-PEERS in
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast maximum-prefix {{ node.bgp.ipv6_prefix_limit }} 90
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast route-policy IPV6-OUTBOUND-PEERS out
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast remove-private-AS
{% if node.bgp.peer_ipv6_2 is defined %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast multipath 
{% else %}
{% endif %}
router bgp {{ node.bgp.local_as }} neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP address-family ipv6 unicast soft-reconfiguration inbound

!Adding BGP Neighbor!

{% if node.bgp.peer_ipv4_multihop_1 is defined %}
router static address-family ipv4 unicast {{ node.bgp.peer_ipv4_multihop_1}}/32 {{ node.bgp.peer_ipv4_1 }} description {{ node.name|upper }}-multihop-next-hop
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_1 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_1 }} ebgp-multihop {{ node.bgp.peer_multihop_1_ttl }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_1 }} update-source Loopback15
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_1 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_1 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% elif node.bgp.peer_ipv4_1 is defined %}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_1 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_1 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_1 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_multihop_2 is defined %}
router static address-family ipv4 unicast {{ node.bgp.peer_ipv4_multihop_2}}/32 {{ node.bgp.peer_ipv4_2 }} description {{ node.name|upper }}-multihop-next-hop
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_2 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_2 }} ebgp-multihop {{ node.bgp.peer_multihop_1_ttl }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_2 }} update-source Loopback15
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_2 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_multihop_2 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% elif node.bgp.peer_ipv4_2 is defined %}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_2 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_2 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV4_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv4_2 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% else %}
{% endif %}

{% if node.bgp.peer_ipv6_multihop_1 is defined %}
router static address-family ipv6 unicast {{ node.bgp.peer_ipv6_multihop_1}}/128 {{ node.bgp.peer_ipv6_1 }} description {{ node.name|upper }}-multihop-next-hop
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_1 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_1 }} ebgp-multihop {{ node.bgp.peer_multihop_1_ttl }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_1 }} update-source Loopback15
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_1 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_1 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% elif node.bgp.peer_ipv6_1 is defined %}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_1 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_1 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_1 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% else %}
{% endif %}

{% if node.bgp.peer_ipv6_multihop_2 is defined %}
router static address-family ipv6 unicast {{ node.bgp.peer_ipv6_multihop_2}}/128 {{ node.bgp.peer_ipv6_2 }} description {{ node.name|upper }}-multihop-next-hop
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_2 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_2 }} ebgp-multihop {{ node.bgp.peer_multihop_2_ttl }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_2 }} update-source Loopback15
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_2 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_multihop_2 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% elif node.bgp.peer_ipv6_2 is defined %}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_2 }}
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_2 }} use neighbor-group AS{{ node.bgp.remote_as }}_{{ node.name|upper }}_IPV6_NEIGHBOR_GROUP
{% if node.bgp.timers_keep is defined %}    
router bgp {{ node.bgp.local_as }} neighbor {{ node.bgp.peer_ipv6_2 }} timers {{ node.bgp.timers_keep }} {{ node.bgp.timers_hold }} {{ node.bgp.timers_min_hold }}
{% else %}
{% endif %}
{% else %}
{% endif %}

END

!CHANGE SPECIFIC POST-CHECKS!

Router Name: {{ inventory_hostname }}

{% if node.lag_id_1 is defined %}
show int be{{ node.lag_id_1 }}
show int be{{ node.lag_id_1 }} | in "rate|drop|err"
show lacp bundle-ether{{ node.lag_id_1 }}
{% else %}
{% endif %}

{% if node.lag_id_2 is defined %}
show int be{{ node.lag_id_2 }}
show int be{{ node.lag_id_2 }} | in "rate|drop|err"
show lacp bundle-ether{{ node.lag_id_2 }}
{% else %}
{% endif %}

{% if node.lag_local_ipv4_1 is defined %}
show route {{ node.lag_local_ipv4_1 }}
ping {{node.bgp.peer_ipv4_1}} source {{node.lag_local_ipv4_1.split("/")[0]}} count 1000
{% else %}
{% endif %}

{% if node.lag_local_ipv4_2 is defined %}   
show route {{ node.lag_local_ipv4_2 }}
ping {{node.bgp.peer_ipv4_2}} source {{node.lag_local_ipv4_2.split("/")[0]}} count 1000
{% else %}
{% endif %}

{% if node.lag_local_ipv6_1 is defined %}
show route ipv6 unicast {{ node.lag_local_ipv6_1 }}
ping {{node.bgp.peer_ipv6_1}} source {{node.lag_local_ipv6_1.split("/")[0]}} count 1000
{% else %}
{% endif %}


{% if node.lag_local_ipv6_2 is defined %}   
show route ipv6 unicast {{ node.lag_local_ipv6_2 }}
ping {{node.bgp.peer_ipv6_2}} source {{node.lag_local_ipv6_2.split("/")[0]}} count 1000
{% else %}
{% endif %}

{% if node.bgp.remote_as is defined %}
show bgp all all sum | i {{ node.bgp.remote_as }}
{% else %}  
{% endif %}

{% if node.bgp.peer_ipv4_1 is defined %}
show bgp neighbor {{ node.bgp.peer_ipv4_1 }} configuration
{% else %}  
{% endif %}

{% if node.bgp.peer_ipv6_1 is defined %}
show bgp neighbor {{ node.bgp.peer_ipv6_1 }} configuration      
{% else %}
{% endif %}

{% if node.bgp.peer_ipv4_2 is defined %}
show bgp neighbor {{ node.bgp.peer_ipv4_2 }} configuration
{% else %}
{% endif %} 

{% if node.bgp.peer_ipv6_2 is defined %}
show bgp neighbor {{ node.bgp.peer_ipv6_2 }} configuration
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_1 is defined %}
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_1 }} advertised-routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_2 is defined %}
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_2}} advertised-routes
{% else %}
{% endif %}

{% if node.bgp.peer_ipv4_1 is defined %}
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_1 }} routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv4_2 is defined %}   
show bgp ipv4 unicast neighbor {{ node.bgp.peer_ipv4_2 }} routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv6_1 is defined %}
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_1 }} advertised-routes
{% else %}
{% endif %}

{% if node.bgp.peer_ipv6_2 is defined %}   
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_2 }} advertised-routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv6_1 is defined %} 
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_1 }} routes
{% else %}
{% endif %}


{% if node.bgp.peer_ipv6_2 is defined %}
show bgp ipv6 unicast neighbor {{ node.bgp.peer_ipv6_2 }} routes
{% else %}
{% endif %}
!

{% if node.lag_id_1 is defined %}
{% for intf,intf_attr in node.lag_id_1_links.items() %}
show interface {{ intf }} | in "rate|drop|err"
{% endfor %}

{% else %}
{% endif %}

{% if node.lag_id_2 is defined %}
{% for intf,intf_attr in node.lag_id_2_links.items() %}
show interface {{ intf }} | in "rate|drop|err"
{% endfor %}

{% else %}
{% endif %}


